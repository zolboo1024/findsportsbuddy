{"ast":null,"code":"import _slicedToArray from\"/home/ec2-user/findsportsbuddy/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//The first page served to the user when\n//the user visits a page\n//Author: Zolboo Erdenebaatar\nimport'bulma/css/bulma.min.css';import'./LandingSearchPage.css';import CustomNavbar from'./CustomNavbar';import CustomFooter from'./CustomFooter';import GooglePlacesAutocomplete from'react-google-places-autocomplete';import React,{useState}from'react';import Geocode from\"react-geocode\";import history from'./../history';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CONFIG=require('./../config.json');function submitSearch(address){Geocode.setApiKey(CONFIG.PLACES_KEy);// Get latitude & longitude from address.\nGeocode.fromAddress(address.value.description).then(function(response){var _response$results$0$g=response.results[0].geometry.location,lat=_response$results$0$g.lat,lng=_response$results$0$g.lng;var selectedLocation=lat+\" \"+lng;localStorage.setItem(\"selectedLocation\",selectedLocation);// console.log(address.label)\n// console.log(lat + \" \" + lng)\nchangePage('/sportsMap',lat,lng);},function(error){console.error(error);});}function changePage(newUrl,lat,lng){history.push(newUrl+\"?lat=\"+lat+\"&lng=\"+lng);window.location.reload();}function searchButton(selected){if(selected){return/*#__PURE__*/_jsx(\"div\",{className:\"button is-info is-rounded is-link\",onClick:function onClick(){submitSearch(selected);},children:\"Search\"});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"button is-info is-rounded is-link\",disabled:true,children:\"Search\"});}}export default function LandingSearchPage(props){//set the chosen address as a component state\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];if(!localStorage.getItem(\"eventCreated\")){console.log(\"saving event cookie\");localStorage.setItem(\"eventCreated\",\"false\");}return/*#__PURE__*/_jsxs(\"div\",{className:\"landingSearchPage\",children:[/*#__PURE__*/_jsx(CustomNavbar,{}),/*#__PURE__*/_jsx(\"section\",{className:\"hero is-info is-fullheight-with-navbar has-bg-img\",children:/*#__PURE__*/_jsx(\"div\",{className:\"hero-body\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container has-text-centered\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column is-6 is-offset-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title has-text-black\",children:\"Sports Partner Finder\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"subtitle has-text-black\",children:\"Find a partner for your activities\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box is-rounded\",children:[\"Enter your location to find nearby partners\",/*#__PURE__*/_jsxs(\"div\",{className:\"field is-grouped\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"control is-expanded\",children:/*#__PURE__*/_jsx(GooglePlacesAutocomplete,{className:\"control is-expanded\",apiKey:CONFIG.PLACES_KEy,selectProps:{selected:selected,onChange:setSelected}})}),searchButton(selected)]})]})]})})})}),/*#__PURE__*/_jsx(CustomFooter,{})]});}","map":{"version":3,"sources":["/home/ec2-user/findsportsbuddy/client/src/Components/LandingSearchPage.js"],"names":["CustomNavbar","CustomFooter","GooglePlacesAutocomplete","React","useState","Geocode","history","CONFIG","require","submitSearch","address","setApiKey","PLACES_KEy","fromAddress","value","description","then","response","results","geometry","location","lat","lng","selectedLocation","localStorage","setItem","changePage","error","console","newUrl","push","window","reload","searchButton","selected","LandingSearchPage","props","setSelected","getItem","log","onChange"],"mappings":"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","sourcesContent":["//The first page served to the user when\n//the user visits a page\n//Author: Zolboo Erdenebaatar\nimport 'bulma/css/bulma.min.css';\nimport './LandingSearchPage.css';\nimport CustomNavbar from './CustomNavbar';\nimport CustomFooter from './CustomFooter';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport React, { useState } from 'react';\nimport Geocode from \"react-geocode\";\nimport history from './../history';\nvar CONFIG = require('./../config.json');\n\nfunction submitSearch(address) {\n    Geocode.setApiKey(CONFIG.PLACES_KEy);\n    // Get latitude & longitude from address.\n    Geocode.fromAddress(address.value.description).then(\n        (response) => {\n            const { lat, lng } = response.results[0].geometry.location;\n            const selectedLocation = lat + \" \" + lng\n            localStorage.setItem(\"selectedLocation\", selectedLocation);\n            // console.log(address.label)\n            // console.log(lat + \" \" + lng)\n            changePage('/sportsMap', lat, lng);\n        },\n        (error) => {\n            console.error(error);\n        }\n    );\n}\n\nfunction changePage(newUrl, lat, lng) {\n    history.push(newUrl + \"?lat=\" + lat + \"&lng=\" + lng);\n    window.location.reload();\n}\n\nfunction searchButton(selected) {\n    if (selected) {\n        return (\n            <div className=\"button is-info is-rounded is-link\"\n                onClick={function () { submitSearch(selected) }}>\n                Search\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"button is-info is-rounded is-link\" disabled={true}>\n                Search\n            </div>\n        )\n    }\n}\n\nexport default function LandingSearchPage(props) {\n    //set the chosen address as a component state\n    const [selected, setSelected] = useState(null);\n    if (!localStorage.getItem(\"eventCreated\")) {\n        console.log(\"saving event cookie\")\n        localStorage.setItem(\"eventCreated\", \"false\")\n    }\n    return (\n        <div className=\"landingSearchPage\">\n            <CustomNavbar />\n            <section className=\"hero is-info is-fullheight-with-navbar has-bg-img\">\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <div className=\"column is-6 is-offset-3\">\n                            <div className=\"box\">\n                                <h1 className=\"title has-text-black\">\n                                    Sports Partner Finder\n                                </h1>\n                                <h2 className=\"subtitle has-text-black\">\n                                    Find a partner for your activities\n                                </h2>\n                            </div>\n                            <div className=\"box is-rounded\">\n                                Enter your location to find nearby partners\n                                <div className=\"field is-grouped\">\n                                    <div className=\"control is-expanded\">\n                                        <GooglePlacesAutocomplete\n                                            className=\"control is-expanded\"\n                                            apiKey={CONFIG.PLACES_KEy}\n                                            selectProps={{\n                                                selected,\n                                                onChange: setSelected,\n                                            }}\n                                        />\n                                    </div>\n                                    {searchButton(selected)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <CustomFooter />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}