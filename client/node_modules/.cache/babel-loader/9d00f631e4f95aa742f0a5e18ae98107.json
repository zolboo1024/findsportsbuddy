{"ast":null,"code":"var _jsxFileName = \"/home/zolboo/Projects/findsportsbuddy/client/src/Components/DisplayMap.js\",\n    _s = $RefreshSig$();\n\n//display this map when users go to /sportsMap\n//does not need to be logged in to see this\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { formatRelative } from 'date-fns';\nimport mapStyles from './mapStyles';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport CustomNavbar from './CustomNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CONFIG = require('./../config.json'); //function that returns the custom map\n\n\nconst mapContainerStyle = {\n  width: \"100vw\",\n  height: \"100vh\"\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true\n};\nconst center = {\n  lat: 42.058406,\n  lng: -88.125363\n};\nexport default function DisplayMap(props) {\n  _s();\n\n  //load the maps\n  const libraries = [\"places\"];\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: CONFIG.JS_MAPS_KEY,\n    libraries\n  });\n  var [markers, setMarker] = React.useState();\n  const [selected, setSelected] = React.useState();\n  useEffect(() => {\n    axios.get(CONFIG.API_URL + '/events/getAll').then(events => {\n      console.log(events.data);\n      var newMarkers = events.data.map(function (event) {\n        var loc = event.location.split(\" \");\n        var curLat = parseFloat(loc[0]);\n        var curLng = parseFloat(loc[1]);\n        var starttime = new Date(event.start_time).toTimeString().substring(0, 5);\n        var endtime = new Date(event.end_time).toTimeString().substring(0, 5);\n        return {\n          lat: curLat,\n          lng: curLng,\n          sportName: event.sport_type,\n          startTime: starttime,\n          endTime: endtime,\n          numParticipants: event.num_participants\n        };\n      });\n      setMarker(newMarkers);\n    });\n  }, []);\n  if (loadError) return \"LoadError\";\n  if (!isLoaded) return \"Loading\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"is-fullheight-with-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"title has-text-centered\",\n        children: [\"Join These Activities Near You (or \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/hostEvent\",\n          children: \"Host Your Own One)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 88\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        zoom: 15,\n        center: center,\n        options: options,\n        children: [markers && markers.map(function (marker) {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: marker.lat,\n              lng: marker.lng\n            },\n            icon: {\n              url: window.location.origin + \"/emojis/\" + marker.sportName + \".png\",\n              scaledSize: new window.google.maps.Size(30, 30),\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(15, 15)\n            },\n            onClick: () => {\n              setSelected(marker);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 40\n          }, this);\n        }), selected && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: selected.lat,\n            lng: selected.lng\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              class: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"card-header-title\",\n                children: selected.sportName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Starts: \", selected.startTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Ends: \", selected.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"# of people: \", selected.numParticipants]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DisplayMap, \"ORjhNOmRPNZzauYC6oVNaZwoYN4=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = DisplayMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayMap\");","map":{"version":3,"sources":["/home/zolboo/Projects/findsportsbuddy/client/src/Components/DisplayMap.js"],"names":["GoogleMap","useLoadScript","Marker","InfoWindow","formatRelative","mapStyles","axios","React","useEffect","CustomNavbar","CONFIG","require","mapContainerStyle","width","height","options","styles","disableDefaultUI","center","lat","lng","DisplayMap","props","libraries","isLoaded","loadError","googleMapsApiKey","JS_MAPS_KEY","markers","setMarker","useState","selected","setSelected","get","API_URL","then","events","console","log","data","newMarkers","map","event","loc","location","split","curLat","parseFloat","curLng","starttime","Date","start_time","toTimeString","substring","endtime","end_time","sportName","sport_type","startTime","endTime","numParticipants","num_participants","marker","url","window","origin","scaledSize","google","maps","Size","Point","anchor"],"mappings":"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","sourcesContent":["//display this map when users go to /sportsMap\n//does not need to be logged in to see this\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { formatRelative } from 'date-fns';\nimport mapStyles from './mapStyles';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport CustomNavbar from './CustomNavbar';\nvar CONFIG = require('./../config.json');\n\n//function that returns the custom map\nconst mapContainerStyle = {\n    width: \"100vw\",\n    height: \"100vh\"\n}\nconst options = {\n    styles: mapStyles,\n    disableDefaultUI: true\n}\nconst center = {\n    lat: 42.058406,\n    lng: -88.125363\n}\nexport default function DisplayMap(props) {\n    //load the maps\n    const libraries = [\"places\"];\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: CONFIG.JS_MAPS_KEY,\n        libraries\n    });\n    var [markers, setMarker] = React.useState();\n    const [selected, setSelected] = React.useState();\n    useEffect(() => {\n        axios.get(CONFIG.API_URL + '/events/getAll').then(\n            (events) => {\n                console.log(events.data)\n                var newMarkers = events.data.map(\n                    function (event) {\n                        var loc = event.location.split(\" \");\n                        var curLat = parseFloat(loc[0]);\n                        var curLng = parseFloat(loc[1]);\n                        var starttime = (new Date(event.start_time).toTimeString()).substring(0, 5);\n                        var endtime = (new Date(event.end_time).toTimeString()).substring(0, 5);\n                        return {\n                            lat: curLat,\n                            lng: curLng,\n                            sportName: event.sport_type,\n                            startTime: starttime,\n                            endTime: endtime,\n                            numParticipants: event.num_participants\n                        };\n                    }\n                )\n                setMarker(newMarkers);\n            }\n        )\n    }, []);\n    if (loadError) return \"LoadError\";\n    if (!isLoaded) return \"Loading\";\n    return (\n        <div>\n            <CustomNavbar></CustomNavbar>\n            <div class=\"is-fullheight-with-navbar\">\n                <h1 class=\"title has-text-centered\">Join These Activities Near You (or <a href=\"/hostEvent\">Host Your Own One)</a></h1>\n                <GoogleMap\n                    mapContainerStyle={mapContainerStyle}\n                    zoom={15}\n                    center={center}\n                    options={options}\n                >\n                    {markers &&\n                        markers.map(\n                            function (marker) {\n                                return <Marker\n                                    position={{ lat: marker.lat, lng: marker.lng }}\n                                    icon={{\n                                        url: window.location.origin + \"/emojis/\" + marker.sportName + \".png\",\n                                        scaledSize: new window.google.maps.Size(30, 30),\n                                        origin: new window.google.maps.Point(0, 0),\n                                        anchor: new window.google.maps.Point(15, 15)\n                                    }}\n                                    onClick={() => {\n                                        setSelected(marker);\n                                    }}\n                                ></Marker>\n                            }\n                        )\n                    }\n                    {\n                        selected && (\n                            <InfoWindow position={{ lat: selected.lat, lng: selected.lng }}>\n                                <div class=\"card\">\n                                    <header class=\"card-header\">\n                                        <p class=\"card-header-title\">\n                                            {selected.sportName}\n                                        </p>\n                                    </header>\n                                    <div class=\"card-content\">\n                                        <p>Starts: {selected.startTime}</p>\n                                        <p>Ends: {selected.endTime}</p>\n                                        <p># of people: {selected.numParticipants}</p>\n                                    </div>\n                                </div>\n                            </InfoWindow>\n                        )\n                    }\n                </GoogleMap>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}