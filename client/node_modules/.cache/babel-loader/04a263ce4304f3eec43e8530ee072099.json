{"ast":null,"code":"import _slicedToArray from\"/home/ec2-user/findsportsbuddy/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//The form of the hostEvent page that asks for the users location\n//Author: Zolboo Erdenebaatar\nimport{GoogleMap,useLoadScript,Marker}from'@react-google-maps/api';import mapStyles from'./../mapStyles';import React,{useEffect,useState}from'react';import CustomNavbar from'../CustomNavbar';import GooglePlacesAutocomplete from'react-google-places-autocomplete';import'bulma/css/bulma.min.css';import'./AskLocation.css';import Geocode from\"react-geocode\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CONFIG=require('./../../config.json');Geocode.setApiKey(CONFIG.PLACES_KEy);//function that returns the custom map\nvar mapContainerStyle={width:\"100vw\",height:\"100vh\"};var options={styles:mapStyles,disableDefaultUI:true};export default function AskLocation(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var _useState3=useState({lat:38.8977,lng:77.0365}),_useState4=_slicedToArray(_useState3,2),center=_useState4[0],setCenter=_useState4[1];//load the maps\nvar _useLoadScript=useLoadScript({googleMapsApiKey:CONFIG.JS_MAPS_KEY}),isLoaded=_useLoadScript.isLoaded,loadError=_useLoadScript.loadError;var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),marker=_React$useState2[0],setMarker=_React$useState2[1];useEffect(function(){var savedLocation=localStorage.getItem(\"selectedLocation\");var split=savedLocation.split(' ');setCenter({lat:parseFloat(split[0]),lng:parseFloat(split[1])});},[]);function handleAddressChange(event){var address=event.value.description;// Get latitude & longitude from address.\nGeocode.fromAddress(address).then(function(response){var _response$results$0$g=response.results[0].geometry.location,lat=_response$results$0$g.lat,lng=_response$results$0$g.lng;var selectedLocation=lat+\" \"+lng;localStorage.setItem(\"selectedLocation\",selectedLocation);setSelected({lat:parseFloat(lat),lng:parseFloat(lng)});},function(error){console.error(error);});}if(loadError)return\"LoadError\";if(!isLoaded)return\"Loading\";return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CustomNavbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"hero is-fullheight-with-navbar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"box has-text-black\",id:\"question\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title has-text-black\",children:\"Where would you like to play? (Drop a pin)\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Search for a specific location:\"}),/*#__PURE__*/_jsx(GooglePlacesAutocomplete,{apiKey:CONFIG.PLACES_KEy,selectProps:{selected:selected,onChange:handleAddressChange}})]}),marker&&/*#__PURE__*/_jsx(\"div\",{className:\"box\",id:\"rightarrow\",children:/*#__PURE__*/_jsx(\"input\",{type:\"image\",alt:\"right arrow\",src:window.location.origin+\"/svgs/rightarrow.svg\",onClick:props.nextStep})}),/*#__PURE__*/_jsx(GoogleMap,{mapContainerStyle:mapContainerStyle,zoom:15,center:center,options:options,onClick:function onClick(event){setMarker({lat:event.latLng.lat(),lng:event.latLng.lng()});//save the location into the parent's state\nprops.handleLocation(event.latLng.lat(),event.latLng.lng());},children:marker&&/*#__PURE__*/_jsx(Marker,{position:{lat:marker.lat,lng:marker.lng}})})]})]});}","map":{"version":3,"sources":["/home/ec2-user/findsportsbuddy/client/src/Components/HostEventForm/AskLocation.js"],"names":["GoogleMap","useLoadScript","Marker","mapStyles","React","useEffect","useState","CustomNavbar","GooglePlacesAutocomplete","Geocode","CONFIG","require","setApiKey","PLACES_KEy","mapContainerStyle","width","height","options","styles","disableDefaultUI","AskLocation","props","selected","setSelected","lat","lng","center","setCenter","googleMapsApiKey","JS_MAPS_KEY","isLoaded","loadError","marker","setMarker","savedLocation","localStorage","getItem","split","parseFloat","handleAddressChange","event","address","value","description","fromAddress","then","response","results","geometry","location","selectedLocation","setItem","error","console","onChange","window","origin","nextStep","latLng","handleLocation"],"mappings":"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","sourcesContent":["//The form of the hostEvent page that asks for the users location\n//Author: Zolboo Erdenebaatar\n\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport mapStyles from './../mapStyles';\nimport React, { useEffect, useState } from 'react';\nimport CustomNavbar from '../CustomNavbar';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'bulma/css/bulma.min.css';\nimport './AskLocation.css';\nimport Geocode from \"react-geocode\";\nvar CONFIG = require('./../../config.json');\nGeocode.setApiKey(CONFIG.PLACES_KEy);\n//function that returns the custom map\nconst mapContainerStyle = {\n    width: \"100vw\",\n    height: \"100vh\"\n}\nconst options = {\n    styles: mapStyles,\n    disableDefaultUI: true\n}\nexport default function AskLocation(props) {\n    const [selected, setSelected] = useState(null);\n    const [center, setCenter] = useState({ lat: 38.8977, lng: 77.0365 })\n    //load the maps\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: CONFIG.JS_MAPS_KEY\n    });\n    const [marker, setMarker] = React.useState();\n    useEffect(() => {\n        const savedLocation = localStorage.getItem(\"selectedLocation\");\n        const split = savedLocation.split(' ')\n        setCenter({\n            lat: parseFloat(split[0]),\n            lng: parseFloat(split[1])\n        })\n    }, []);\n    function handleAddressChange(event) {\n        const address = event.value.description;\n        // Get latitude & longitude from address.\n        Geocode.fromAddress(address).then(\n            (response) => {\n                const { lat, lng } = response.results[0].geometry.location;\n                const selectedLocation = lat + \" \" + lng\n                localStorage.setItem(\"selectedLocation\", selectedLocation);\n                setSelected({\n                    lat: parseFloat(lat),\n                    lng: parseFloat(lng)\n                })\n            },\n            (error) => {\n                console.error(error);\n            }\n        );\n    }\n    if (loadError) return \"LoadError\";\n    if (!isLoaded) return \"Loading\";\n    return (\n        <div>\n            <CustomNavbar></CustomNavbar>\n            <div className=\"hero is-fullheight-with-navbar\">\n                <div className=\"box has-text-black\" id=\"question\">\n                    <h1 className=\"title has-text-black\">\n                        Where would you like to play? (Drop a pin)\n                    </h1>\n                    <h3>\n                        Search for a specific location:\n                    </h3>\n                    <GooglePlacesAutocomplete\n                        apiKey={CONFIG.PLACES_KEy}\n                        selectProps={{\n                            selected,\n                            onChange: handleAddressChange,\n                        }}\n                    />\n\n                </div>\n                {\n                    marker &&\n                    <div className=\"box\" id=\"rightarrow\">\n                        <input\n                            type=\"image\"\n                            alt=\"right arrow\"\n                            src={window.location.origin + \"/svgs/rightarrow.svg\"}\n                            onClick={props.nextStep}>\n                        </input>\n                    </div>\n                }\n                <GoogleMap\n                    mapContainerStyle={mapContainerStyle}\n                    zoom={15}\n                    center={center}\n                    options={options}\n                    onClick={\n                        (event) => {\n                            setMarker({\n                                lat: event.latLng.lat(),\n                                lng: event.latLng.lng()\n                            });\n                            //save the location into the parent's state\n                            props.handleLocation(event.latLng.lat(), event.latLng.lng());\n                        }\n                    }\n                >\n                    {marker &&\n                        <Marker position={{ lat: marker.lat, lng: marker.lng }}></Marker>\n                    }\n                </GoogleMap>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}