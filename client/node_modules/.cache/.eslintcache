[{"/home/ec2-user/findsportsbuddy/client/src/index.js":"1","/home/ec2-user/findsportsbuddy/client/src/App.js":"2","/home/ec2-user/findsportsbuddy/client/src/reportWebVitals.js":"3","/home/ec2-user/findsportsbuddy/client/src/history.js":"4","/home/ec2-user/findsportsbuddy/client/src/Components/HostEventPage.js":"5","/home/ec2-user/findsportsbuddy/client/src/Components/DisplayMap.js":"6","/home/ec2-user/findsportsbuddy/client/src/Components/LandingSearchPage.js":"7","/home/ec2-user/findsportsbuddy/client/src/Components/CustomFooter.js":"8","/home/ec2-user/findsportsbuddy/client/src/Components/mapStyles.js":"9","/home/ec2-user/findsportsbuddy/client/src/Components/CustomNavbar.js":"10","/home/ec2-user/findsportsbuddy/client/src/auth/authService.js":"11","/home/ec2-user/findsportsbuddy/client/src/auth/authHeader.js":"12","/home/ec2-user/findsportsbuddy/client/src/Components/HostEventForm/AskLocation.js":"13","/home/ec2-user/findsportsbuddy/client/src/Components/HostEventForm/AskSport.js":"14","/home/ec2-user/findsportsbuddy/client/src/Components/HostEventForm/AskTime.js":"15","/home/ec2-user/findsportsbuddy/client/src/Components/HostEventForm/sportsCards.js":"16"},{"size":500,"mtime":1640638785299,"results":"17","hashOfConfig":"18"},{"size":861,"mtime":1640638785291,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1640638785299,"results":"20","hashOfConfig":"18"},{"size":136,"mtime":1640638785299,"results":"21","hashOfConfig":"18"},{"size":7509,"mtime":1640638785291,"results":"22","hashOfConfig":"18"},{"size":12103,"mtime":1640638785291,"results":"23","hashOfConfig":"18"},{"size":3845,"mtime":1640638785291,"results":"24","hashOfConfig":"18"},{"size":675,"mtime":1640638785291,"results":"25","hashOfConfig":"18"},{"size":8911,"mtime":1640638785291,"results":"26","hashOfConfig":"18"},{"size":4702,"mtime":1640638785291,"results":"27","hashOfConfig":"18"},{"size":1260,"mtime":1640802128662,"results":"28","hashOfConfig":"18"},{"size":316,"mtime":1640638785299,"results":"29","hashOfConfig":"18"},{"size":4169,"mtime":1640638785291,"results":"30","hashOfConfig":"18"},{"size":4175,"mtime":1640638785291,"results":"31","hashOfConfig":"18"},{"size":6279,"mtime":1640638785291,"results":"32","hashOfConfig":"18"},{"size":1691,"mtime":1640638785291,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sjrwa9",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/findsportsbuddy/client/src/index.js",[],"/home/ec2-user/findsportsbuddy/client/src/App.js",[],"/home/ec2-user/findsportsbuddy/client/src/reportWebVitals.js",[],"/home/ec2-user/findsportsbuddy/client/src/history.js",[],"/home/ec2-user/findsportsbuddy/client/src/Components/HostEventPage.js",[],"/home/ec2-user/findsportsbuddy/client/src/Components/DisplayMap.js",["67"],"//display this map when users go to /sportsMap\n//does not need to be logged in to see this\n//shows all the current events registered nearby\n//Author: Zolboo Erdenebaatar\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport mapStyles from './mapStyles';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport CustomNavbar from './CustomNavbar';\nimport CustomFooter from './CustomFooter';\nimport './DisplayMap.css';\nvar CONFIG = require('./../config.json');\n\nconst libraries = [\"places\"];\n//function that returns the custom map\nconst mapContainerStyle = {\n    width: \"66vw\",\n    height: \"80vh\"\n}\n\nconst options = {\n    styles: mapStyles,\n    disableDefaultUI: true\n}\nexport default function DisplayMap(props) {\n    //load the maps\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: CONFIG.JS_MAPS_KEY,\n        libraries\n    });\n    //markers = events to show up on the map\n    var [markers, setMarker] = React.useState();\n    const [selected, setSelected] = React.useState();\n    //load the center\n    const params = new URLSearchParams(props.location.search);\n    var center = { lat: 38.8977, lng: 77.0365 }\n    if (localStorage.getItem(\"selectedLocation\")) {\n        const savedLocation = localStorage.getItem(\"selectedLocation\");\n        const split = savedLocation.split(' ')\n        center = {\n            lat: parseFloat(split[0]),\n            lng: parseFloat(split[1])\n        }\n    }\n    if (params.get(\"lat\")) {\n        center = {\n            lat: parseFloat(params.get(\"lat\")),\n            lng: parseFloat(params.get(\"lng\"))\n        }\n    }\n    //import the active events\n    useEffect(() => {\n        axios.get(CONFIG.API_URL + '/events/getAll').then(\n            (events) => {\n                var newMarkers = events.data.filter(\n                    //filter out the old events\n                    function (event) {\n                        const eventTime = new Date(event.end_time).getTime();\n                        if (eventTime <= Date.now()) {\n                            return false;\n                        }\n                        function deg2rad(deg) {\n                            return deg * (Math.PI / 180)\n                        }\n                        var loc = event.location.split(\" \");\n                        const lat1 = center.lat;\n                        const lon1 = center.lng;\n                        const lat2 = parseFloat(loc[0]);\n                        const lon2 = parseFloat(loc[1]);\n                        //filter out the events that are too far positionally\n                        var R = 6371; // Radius of the earth in km\n                        var dLat = deg2rad(lat2 - lat1);  // deg2rad below\n                        var dLon = deg2rad(lon2 - lon1);\n                        var a =\n                            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n                            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n                            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n                            ;\n                        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n                        var d = R * c; // Distance in km\n                        if (d > 5) {\n                            return false;\n                        }\n                        return true;\n                    }\n                ).map(\n                    function (event) {\n                        //map the events to markers\n                        var loc = event.location.split(\" \");\n                        var curLat = parseFloat(loc[0]);\n                        var curLng = parseFloat(loc[1]);\n                        var starttime = (new Date(event.start_time).toTimeString()).substring(0, 5);\n                        var endtime = (new Date(event.end_time).toTimeString()).substring(0, 5);\n                        var thisDate = event.start_time.substring(0, 10);\n                        var host = event.host;\n                        return {\n                            id: event.id,\n                            lat: curLat,\n                            creator: host,\n                            lng: curLng,\n                            sportName: event.sport_type,\n                            startTime: starttime,\n                            date: thisDate,\n                            endTime: endtime,\n                            numParticipants: event.num_participants\n                        };\n                    }\n                );\n                setMarker(newMarkers);\n            }\n        )\n    }, []);\n    if (loadError) return \"LoadError\";\n    if (!isLoaded) return \"Loading\";\n    return (\n        <div>\n            <CustomNavbar></CustomNavbar>\n            <div className=\"is-fullheight-with-navbar\">\n                <h1 className=\"title has-text-centered\">Join These Activities Near You (or <a href=\"/hostEvent\">Host Your Own)</a></h1>\n                <h2 className=\"subtitle has-text-centered\">Click on the emoji for more information</h2>\n                <div className=\"columns\">\n                    <div className=\"column is-one-third scrollable\">\n                        {\n                            markers &&\n                            markers.map(\n                                function (marker) {\n                                    return <div className=\"box moreinfobox\"\n                                        onMouseEnter={() => { setSelected(marker) }}\n                                        onMouseLeave={() => { setSelected(null) }}\n                                        key={marker.id}\n                                    >\n                                        <div className=\"columns\">\n                                            <div className=\"column is-one-third\">\n                                                <img src={\"/emojis/\" + marker.sportName + \".png\"} alt=\"sportemoji\" />\n                                            </div>\n                                            <div className=\"column\">\n                                                <div>\n                                                    <span className=\"is-size-4\">\n                                                        <span className=\"has-text-weight-semibold\">What: </span>\n                                                        {marker.sportName}\n                                                    </span>\n                                                </div>\n                                                <div>\n                                                    <span className=\"is-size-5\">\n                                                        <span className=\"has-text-weight-semibold\">When: </span>\n                                                        {marker.startTime}-{marker.endTime} ({marker.date})\n                                                    </span>\n                                                </div>\n                                                <div>\n                                                    <span className=\"is-size-5\">\n                                                        <span className=\"has-text-weight-semibold\">How many people: </span>\n                                                        {marker.numParticipants}\n                                                    </span>\n                                                </div>\n                                                <div>\n                                                    <span className=\"is-size-5\">\n                                                        <span className=\"has-text-weight-semibold\">Created by: </span>\n                                                        {marker.creator}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                }\n                            )\n                        }\n                        {\n                            (!markers || markers.length === 0) &&\n                            < div className=\"box is-size-4 has-text-weight-semibold has-text-danger no-event-box\">\n                                Hmmmmm... It looks like there is no sport event near you.\n                                However, you can host your own here:\n                                <div className=\"outerHostEvent\">\n                                    <a\n                                        className=\"button is-success is-large is-rounded m-4\"\n                                        id=\"neweventbutton\"\n                                        href=\"/hostEvent\">\n                                        Host your own event\n                                    </a>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"column\">\n                        <div className=\"container container-extra\">\n                            <GoogleMap\n                                mapContainerStyle={mapContainerStyle}\n                                zoom={15}\n                                center={center}\n                                options={options}\n                            >\n                                {markers &&\n                                    markers.map(\n                                        function (marker) {\n                                            return <Marker\n                                                position={{ lat: marker.lat, lng: marker.lng }}\n                                                onClick={() => {\n                                                    console.log(marker)\n                                                    setSelected(marker);\n                                                }}\n                                                icon={{\n                                                    url: \"/emojis/\" + marker.sportName + \".png\",\n                                                    scaledSize: new window.google.maps.Size(30, 30),\n                                                    origin: new window.google.maps.Point(0, 0),\n                                                    anchor: new window.google.maps.Point(15, 15)\n                                                }}\n                                                key={marker.id}\n                                            ></Marker>\n                                        }\n                                    )\n                                }\n                                {\n                                    selected && (\n                                        <InfoWindow position={{ lat: selected.lat, lng: selected.lng }} onCloseClick={() => { setSelected(null) }}>\n                                            <div className=\"card\">\n                                                <header className=\"card-header\">\n                                                    <p className=\"card-header-title\">\n                                                        {selected.sportName}\n                                                    </p>\n                                                </header>\n                                                <div className=\"card-content\">\n                                                    <p>Starts: {selected.startTime}</p>\n                                                    <p>Ends: {selected.endTime}</p>\n                                                    <p># of people: {selected.numParticipants}</p>\n                                                </div>\n                                            </div>\n                                        </InfoWindow>\n                                    )\n                                }\n                            </GoogleMap>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <CustomFooter />\n        </div >\n    );\n}","/home/ec2-user/findsportsbuddy/client/src/Components/LandingSearchPage.js",[],"/home/ec2-user/findsportsbuddy/client/src/Components/CustomFooter.js",[],"/home/ec2-user/findsportsbuddy/client/src/Components/mapStyles.js",[],"/home/ec2-user/findsportsbuddy/client/src/Components/CustomNavbar.js",[],"/home/ec2-user/findsportsbuddy/client/src/auth/authService.js",[],"/home/ec2-user/findsportsbuddy/client/src/auth/authHeader.js",[],"/home/ec2-user/findsportsbuddy/client/src/Components/HostEventForm/AskLocation.js",[],"/home/ec2-user/findsportsbuddy/client/src/Components/HostEventForm/AskSport.js",[],"/home/ec2-user/findsportsbuddy/client/src/Components/HostEventForm/AskTime.js",[],"/home/ec2-user/findsportsbuddy/client/src/Components/HostEventForm/sportsCards.js",[],{"ruleId":"68","severity":1,"message":"69","line":112,"column":8,"nodeType":"70","endLine":112,"endColumn":10,"suggestions":"71"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'center.lat' and 'center.lng'. Either include them or remove the dependency array.","ArrayExpression",["72"],{"desc":"73","fix":"74"},"Update the dependencies array to be: [center.lat, center.lng]",{"range":"75","text":"76"},[4590,4592],"[center.lat, center.lng]"]