[{"/home/zolboo/Projects/findsportsbuddy/client/src/index.js":"1","/home/zolboo/Projects/findsportsbuddy/client/src/App.js":"2","/home/zolboo/Projects/findsportsbuddy/client/src/reportWebVitals.js":"3","/home/zolboo/Projects/findsportsbuddy/client/src/Components/LandingSearchPage.js":"4","/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventPage.js":"5","/home/zolboo/Projects/findsportsbuddy/client/src/Components/LoginPage.js":"6","/home/zolboo/Projects/findsportsbuddy/client/src/Components/DisplayMap.js":"7","/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventForm/AskSport.js":"8","/home/zolboo/Projects/findsportsbuddy/client/src/Components/CustomNavbar.js":"9","/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventForm/AskLocation.js":"10","/home/zolboo/Projects/findsportsbuddy/client/src/Components/mapStyles.js":"11","/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventForm/AskTime.js":"12","/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventForm/sportsCards.js":"13","/home/zolboo/Projects/findsportsbuddy/client/src/auth/authService.js":"14","/home/zolboo/Projects/findsportsbuddy/client/src/auth/authHeader.js":"15","/home/zolboo/Projects/findsportsbuddy/client/src/history.js":"16"},{"size":500,"mtime":1640172417078,"results":"17","hashOfConfig":"18"},{"size":944,"mtime":1640265808227,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1640172417078,"results":"20","hashOfConfig":"18"},{"size":3604,"mtime":1640271547191,"results":"21","hashOfConfig":"18"},{"size":7202,"mtime":1640182598683,"results":"22","hashOfConfig":"18"},{"size":4373,"mtime":1640172417074,"results":"23","hashOfConfig":"18"},{"size":7712,"mtime":1640466689928,"results":"24","hashOfConfig":"18"},{"size":4032,"mtime":1640182570768,"results":"25","hashOfConfig":"18"},{"size":4853,"mtime":1640455763441,"results":"26","hashOfConfig":"18"},{"size":4134,"mtime":1640270857356,"results":"27","hashOfConfig":"18"},{"size":8911,"mtime":1640267294413,"results":"28","hashOfConfig":"18"},{"size":5292,"mtime":1640172417074,"results":"29","hashOfConfig":"18"},{"size":1691,"mtime":1640272472041,"results":"30","hashOfConfig":"18"},{"size":1204,"mtime":1640454318624,"results":"31","hashOfConfig":"18"},{"size":229,"mtime":1640172417078,"results":"32","hashOfConfig":"18"},{"size":107,"mtime":1640265370878,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"156y7sr",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/zolboo/Projects/findsportsbuddy/client/src/index.js",[],["70","71"],"/home/zolboo/Projects/findsportsbuddy/client/src/App.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/reportWebVitals.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/Components/LandingSearchPage.js",["72","73"],"import 'bulma/css/bulma.min.css';\nimport './LandingSearchPage.css';\nimport CustomNavbar from './CustomNavbar';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport React, { useState } from 'react';\nimport Geocode from \"react-geocode\";\nimport history from './../history';\nvar CONFIG = require('./../config.json');\n\nfunction submitSearch(address) {\n    Geocode.setApiKey(CONFIG.PLACES_KEy);\n    // Get latitude & longitude from address.\n    Geocode.fromAddress(address.value.description).then(\n        (response) => {\n            const { lat, lng } = response.results[0].geometry.location;\n            const selectedLocation = lat + \" \" + lng\n            localStorage.setItem(\"selectedLocation\", selectedLocation);\n            // console.log(address.label)\n            // console.log(lat + \" \" + lng)\n            changePage('/sportsMap', lat, lng);\n        },\n        (error) => {\n            console.error(error);\n        }\n    );\n}\n\nfunction changePage(newUrl, lat, lng) {\n    history.push(newUrl + \"?lat=\" + lat + \"&lng=\" + lng);\n    window.location.reload();\n}\n\nfunction searchButton(selected) {\n    if (selected) {\n        return (\n            <a className=\"button is-info is-rounded is-link\"\n                onClick={function () { submitSearch(selected) }}>\n                Search\n            </a>\n        )\n    }\n    else {\n        return (\n            <a className=\"button is-info is-rounded is-link\" disabled={true}>\n                Search\n            </a>\n        )\n    }\n}\n\nexport default function LandingSearchPage(props) {\n    const [selected, setSelected] = useState(null);\n    if (!localStorage.getItem(\"eventCreated\")) {\n        console.log(\"saving event cookie\")\n        localStorage.setItem(\"eventCreated\", \"false\")\n    }\n    return (\n        <div className=\"landingSearchPage\">\n            <CustomNavbar />\n            <section className=\"hero is-info is-fullheight-with-navbar has-bg-img\">\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <div className=\"column is-6 is-offset-3\">\n                            <div className=\"box\">\n                                <h1 className=\"title has-text-black\">\n                                    Sports\n                                </h1>\n                                <h2 className=\"subtitle has-text-black\">\n                                    Find a partner for your activities\n                                </h2>\n                            </div>\n                            <div className=\"box is-rounded\">\n                                Enter your location to find nearby partners\n                                <div className=\"field is-grouped\">\n                                    <div className=\"control is-expanded\">\n                                        <GooglePlacesAutocomplete\n                                            className=\"control is-expanded\"\n                                            apiKey={CONFIG.PLACES_KEy}\n                                            selectProps={{\n                                                selected,\n                                                onChange: setSelected,\n                                            }}\n                                        />\n                                    </div>\n                                    {searchButton(selected)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    );\n}\n","/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventPage.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/Components/LoginPage.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/Components/DisplayMap.js",["74"],"/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventForm/AskSport.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/Components/CustomNavbar.js",["75","76","77","78","79","80","81"],"//custom navbar\n//shows login/signup if the user is logged in i.e. if the token is saved\n//otherwise, shows logout\n//Zolboo\nimport logo from './../logo.svg';\nimport { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport authHeader from './../auth/authHeader'\nimport authService from './../auth/authService'\n\nexport default function LandingSearchPage(props) {\n  const [loggedIn, changeLoggedIn] = useState(false);\n  const [username, changeUsername] = useState(null);\n  const [password, changePassword] = useState(null);\n  const [errorMessage, changeError] = useState(null);\n  const [successMessage, changeSuccess] = useState(null);\n\n  useEffect(() => {\n    var token = authHeader();\n    //if it returns the token\n    if (token[\"x-access-token\"]) {\n      changeLoggedIn(true);\n    }\n  }, []);\n\n  function handleLogout() {\n    //delete the local token\n    authService.logout();\n    //change the state\n    changeLoggedIn(false);\n    changeError(null)\n    changeSuccess(null)\n  }\n\n  function handleSignup(event) {\n    event.preventDefault();\n    if (!username || !password) {\n      changeError(\"Please provide username and password to sign up\");\n    }\n    else {\n      authService.register(username, password).then(\n        (data) => {\n          changeSuccess(\"Account successfully created! You can now login\")\n          changeError(null)\n        },\n        error => {\n          changeError(\"Username taken. Please try a different username\")\n          changeSuccess(null)\n        }\n      )\n    }\n  }\n\n  function handleLogin(event) {\n    event.preventDefault();\n    if (!username || !password) {\n      changeError(\"Please provide username and password to log in\");\n    }\n    else {\n      authService.login(username, password).then(\n        (data) => {\n          changeSuccess(\"Successfully logged in!\")\n          changeError(null)\n          changeLoggedIn(true)\n        },\n        error => {\n          changeError(\"Wrong username or password\")\n          changeSuccess(null)\n        }\n      )\n    }\n  }\n\n  function handleUsername(event) {\n    changeUsername(event.target.value);\n  }\n\n  function handlePassword(event) {\n    changePassword(event.target.value);\n  }\n\n  return (\n    <div className=\"Navbar\">\n      <div className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src={logo} alt=\"logo\" width=\"112\" height=\"28\"></img>\n          </a>\n\n          <a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <a className=\"navbar-item\">\n              Home\n            </a>\n\n            <a className=\"navbar-item\">\n              About\n            </a>\n          </div>\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            {successMessage &&\n              <span className=\"p-2 has-text-white has-background-success\">\n                {successMessage}\n              </span>\n            }\n          </div>\n          {loggedIn === false &&\n            <div className=\"navbar-item\">\n              {errorMessage &&\n                <span className=\"p-2 has-text-white has-background-danger\">\n                  {errorMessage}\n                </span>\n              }\n              <a>\n                <div class=\"field m-2\">\n                  <div class=\"control\">\n                    <input class=\"input is-normal\" type=\"username\" placeholder=\"Your Username\" onChange={handleUsername} />\n                  </div>\n                </div>\n              </a>\n              <a>\n                <div class=\"field m-2\">\n                  <div class=\"control\">\n                    <input class=\"input is-normal\" type=\"password\" placeholder=\"Your Password\" onChange={handlePassword} />\n                  </div>\n                </div>\n              </a>\n              <div className=\"buttons\">\n                <a className=\"button is-primary\" onClick={handleSignup}>\n                  <strong>Sign up</strong>\n                </a>\n                <a className=\"button is-light\" href=\"/login\" onClick={handleLogin}>\n                  Log in\n                </a>\n              </div>\n            </div>\n          }\n          {loggedIn &&\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <a className=\"button is-primary\" onClick={handleLogout}>\n                  <strong>Logout</strong>\n                </a>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}","/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventForm/AskLocation.js",["82","83"],"import { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport mapStyles from './../mapStyles';\nimport React, { useEffect, useState } from 'react';\nimport CustomNavbar from '../CustomNavbar';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'bulma/css/bulma.min.css';\nimport './AskLocation.css';\nimport Geocode from \"react-geocode\";\nimport { parse } from 'dotenv';\nvar CONFIG = require('./../../config.json');\nGeocode.setApiKey(CONFIG.PLACES_KEy);\n//function that returns the custom map\nconst mapContainerStyle = {\n    width: \"100vw\",\n    height: \"100vh\"\n}\nconst options = {\n    styles: mapStyles,\n    disableDefaultUI: true\n}\nexport default function AskLocation(props) {\n    const [selected, setSelected] = useState(null);\n    const [center, setCenter] = useState({ lat: 38.8977, lng: 77.0365 })\n    //load the maps\n    const libraries = [\"places\"];\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: CONFIG.JS_MAPS_KEY,\n        libraries\n    });\n    const [marker, setMarker] = React.useState();\n    useEffect(() => {\n        const savedLocation = localStorage.getItem(\"selectedLocation\");\n        const split = savedLocation.split(' ')\n        setCenter({\n            lat: parseFloat(split[0]),\n            lng: parseFloat(split[1])\n        })\n    }, []);\n    function handleAddressChange(event) {\n        const address = event.value.description;\n        // Get latitude & longitude from address.\n        Geocode.fromAddress(address).then(\n            (response) => {\n                const { lat, lng } = response.results[0].geometry.location;\n                const selectedLocation = lat + \" \" + lng\n                localStorage.setItem(\"selectedLocation\", selectedLocation);\n                setCenter({\n                    lat: parseFloat(lat),\n                    lng: parseFloat(lng)\n                })\n            },\n            (error) => {\n                console.error(error);\n            }\n        );\n    }\n    if (loadError) return \"LoadError\";\n    if (!isLoaded) return \"Loading\";\n    return (\n        <div>\n            <CustomNavbar></CustomNavbar>\n            <div className=\"hero is-fullheight-with-navbar\">\n                <div className=\"box has-text-black\" id=\"question\">\n                    <h1 class=\"title has-text-black\">\n                        Where would you like to play?\n                    </h1>\n                    <h3>\n                        Search for a specific location:\n                    </h3>\n                    <GooglePlacesAutocomplete\n                        apiKey={CONFIG.PLACES_KEy}\n                        selectProps={{\n                            selected,\n                            onChange: handleAddressChange,\n                        }}\n                    />\n\n                </div>\n                {\n                    marker &&\n                    <div class=\"box\" id=\"rightarrow\">\n                        <input\n                            type=\"image\"\n                            alt=\"right arrow\"\n                            src={window.location.origin + \"/svgs/rightarrow.svg\"}\n                            onClick={props.nextStep}>\n                        </input>\n                    </div>\n                }\n                <GoogleMap\n                    mapContainerStyle={mapContainerStyle}\n                    zoom={15}\n                    center={center}\n                    options={options}\n                    onClick={\n                        (event) => {\n                            setMarker({\n                                lat: event.latLng.lat(),\n                                lng: event.latLng.lng()\n                            });\n                            //save the location into the parent's state\n                            props.handleLocation(event.latLng.lat(), event.latLng.lng());\n                        }\n                    }\n                >\n                    {marker &&\n                        <Marker position={{ lat: marker.lat, lng: marker.lng }}></Marker>\n                    }\n                </GoogleMap>\n            </div>\n        </div>\n    );\n}","/home/zolboo/Projects/findsportsbuddy/client/src/Components/mapStyles.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventForm/AskTime.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/Components/HostEventForm/sportsCards.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/auth/authService.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/auth/authHeader.js",[],"/home/zolboo/Projects/findsportsbuddy/client/src/history.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":36,"column":13,"nodeType":"90","endLine":37,"endColumn":66},{"ruleId":"88","severity":1,"message":"89","line":44,"column":13,"nodeType":"90","endLine":44,"endColumn":78},{"ruleId":"91","severity":1,"message":"92","line":100,"column":8,"nodeType":"93","endLine":100,"endColumn":10,"suggestions":"94"},{"ruleId":"88","severity":1,"message":"89","line":90,"column":11,"nodeType":"90","endLine":90,"endColumn":127},{"ruleId":"88","severity":1,"message":"89","line":99,"column":13,"nodeType":"90","endLine":99,"endColumn":40},{"ruleId":"88","severity":1,"message":"89","line":103,"column":13,"nodeType":"90","endLine":103,"endColumn":40},{"ruleId":"88","severity":1,"message":"89","line":124,"column":15,"nodeType":"90","endLine":124,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":131,"column":15,"nodeType":"90","endLine":131,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":139,"column":17,"nodeType":"90","endLine":139,"endColumn":73},{"ruleId":"88","severity":1,"message":"89","line":151,"column":17,"nodeType":"90","endLine":151,"endColumn":73},{"ruleId":"95","severity":1,"message":"96","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":15},{"ruleId":"95","severity":1,"message":"99","line":22,"column":22,"nodeType":"97","messageId":"98","endLine":22,"endColumn":33},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'center.lat' and 'center.lng'. Either include them or remove the dependency array.","ArrayExpression",["102"],"no-unused-vars","'parse' is defined but never used.","Identifier","unusedVar","'setSelected' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [center.lat, center.lng]",{"range":"105","text":"106"},[4026,4028],"[center.lat, center.lng]"]